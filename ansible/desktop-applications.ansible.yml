---
- name: Install Desktop Applications
  hosts: localhost
  connection: local
  become: true
  vars:
    original_user: "{{ ansible_env.SUDO_USER }}"

  tasks:
    # GNOME desktop utilities
    - name: Install GNOME desktop utilities and extensions
      ansible.builtin.dnf:
        name:
          - gnome-shell-extension-dash-to-dock # Dash to Dock extension
          - gnome-tweaks # GNOME appearance and behavior customization
          - gnome-extensions-app # Manage GNOME Shell extensions
          - dconf-editor # Advanced configuration editor
        state: present

    # Flatpak applications
    - name: Install Flatpak applications
      community.general.flatpak:
        name: "{{ item }}"
        state: present
      become: true
      become_user: "{{ original_user }}"
      loop:
        - com.github.IsmaelMartinez.teams_for_linux # Teams client
        - md.obsidian.Obsidian # Note-taking and knowledge management
        - org.zotero.Zotero # Reference management and research tool
        - org.onlyoffice.desktopeditors # Office suite
        - com.plexamp.Plexamp # Music player for Plex
        - org.gimp.GIMP # GNU Image Manipulation Program
        - io.mpv.Mpv # Modern media player

    - name: Configure Obsidian flatpak permissions for clipboard access
      ansible.builtin.command: flatpak override --user --socket=session-bus md.obsidian.Obsidian
      become: false
      become_user: "{{ original_user }}"
      changed_when: false
      failed_when: false

    - name: Configure Plexamp flatpak permissions for Wayland socket access
      ansible.builtin.command: flatpak override --user --socket=wayland com.plexamp.Plexamp
      become: false
      become_user: "{{ original_user }}"
      changed_when: false
      failed_when: false

    # GitHub tools (Zen Browser)
    - name: Get Zen Browser latest release info
      ansible.builtin.uri:
        url: https://api.github.com/repos/zen-browser/desktop/releases/latest
        method: GET
        return_content: true
      register: zen_browser_release

    - name: Check if Zen Browser is already installed
      ansible.builtin.stat:
        path: /opt/zen-browser/zen
      register: zen_installed

    - name: Install Zen Browser (privacy-focused Firefox-based browser)
      ansible.builtin.get_url:
        url: >-
          {{ zen_browser_release.json.assets |
             selectattr('name', 'match', '^zen\\.linux-x86_64\\.tar\\.xz$') |
             map(attribute='browser_download_url') | first }}
        dest: /tmp/zen-browser.tar.xz
        mode: "0644"
      become: true
      become_user: "{{ original_user }}"
      when: zen_browser_release is defined and not zen_installed.stat.exists

    - name: Create Zen Browser directory
      ansible.builtin.file:
        path: "/opt/zen-browser"
        state: directory
        mode: "0755"
        owner: root
        group: root
      when: zen_browser_release is defined and not zen_installed.stat.exists

    - name: Extract Zen Browser
      ansible.builtin.unarchive:
        src: /tmp/zen-browser.tar.xz
        dest: /opt/zen-browser
        remote_src: true
        extra_opts: [--strip-components=1]
      when: zen_browser_release is defined and not zen_installed.stat.exists

    - name: Create Zen Browser desktop entry
      ansible.builtin.copy:
        content: |
          [Desktop Entry]
          Version=1.0
          Name=Zen Browser
          Comment=Privacy-focused Firefox-based browser
          GenericName=Web Browser
          Keywords=Internet;WWW;Browser;Web;Explorer
          Exec=/opt/zen-browser/zen %u
          Terminal=false
          X-MultipleArgs=false
          Type=Application
          Icon=/opt/zen-browser/browser/chrome/icons/default/default128.png
          Categories=GNOME;GTK;Network;WebBrowser;
          MimeType=text/html;text/xml;application/xhtml+xml;application/xml;application/rss+xml;application/rdf+xml;image/gif;image/jpeg;image/png;x-scheme-handler/http;x-scheme-handler/https;x-scheme-handler/ftp;x-scheme-handler/chrome;video/webm;application/x-xpinstall;
          StartupNotify=true
        dest: /usr/share/applications/zen-browser.desktop
        mode: "0644"
      when: zen_browser_release is defined and not zen_installed.stat.exists

    - name: Create Zen Browser symlink
      ansible.builtin.file:
        src: /opt/zen-browser/zen
        dest: /usr/local/bin/zen
        state: link
      when: zen_browser_release is defined and not zen_installed.stat.exists

    - name: Clean up Zen Browser installation file
      ansible.builtin.file:
        path: /tmp/zen-browser.tar.xz
        state: absent
      become: true
      become_user: "{{ original_user }}"
      when: zen_browser_release is defined and not zen_installed.stat.exists
