---
- name: Setup Fedora Workstation
  hosts: localhost
  connection: local
  become: true
  vars:
    user_home: "{{ ansible_env.HOME }}"
    regular_user: "{{ ansible_env.USER }}"
    original_user: "{{ ansible_env.SUDO_USER }}"

  tasks:
    - name: Import 1Password GPG key
      ansible.builtin.rpm_key:
        key: https://downloads.1password.com/linux/keys/1password.asc
        state: present

    - name: Add 1Password repository
      ansible.builtin.yum_repository:
        name: 1password
        description: 1Password Stable Channel
        baseurl: https://downloads.1password.com/linux/rpm/stable/$basearch
        enabled: true
        gpgcheck: true
        repo_gpgcheck: true
        gpgkey: https://downloads.1password.com/linux/keys/1password.asc

    - name: Add Google Chrome repository
      ansible.builtin.yum_repository:
        name: google-chrome
        description: Google Chrome
        baseurl: http://dl.google.com/linux/chrome/rpm/stable/x86_64
        enabled: true
        gpgcheck: true
        gpgkey: https://dl.google.com/linux/linux_signing_key.pub

    - name: Import Google Chrome GPG key
      ansible.builtin.rpm_key:
        key: https://dl.google.com/linux/linux_signing_key.pub
        state: present

    - name: Import Microsoft GPG key
      ansible.builtin.rpm_key:
        key: https://packages.microsoft.com/keys/microsoft.asc
        state: present

    - name: Add Visual Studio Code repository
      ansible.builtin.yum_repository:
        name: vscode
        description: Visual Studio Code
        baseurl: https://packages.microsoft.com/yumrepos/vscode
        enabled: true
        gpgcheck: true
        gpgkey: https://packages.microsoft.com/keys/microsoft.asc

    - name: Install desktop applications (native packages for system integration)
      ansible.builtin.dnf:
        name:
          - 1password # Password manager (needs system integration)
          - google-chrome-stable # Web browser (needs system integration)
          - code # Visual Studio Code (needs system integration)
        state: present

    - name: Install teams-for-linux via Flatpak (unofficial Teams client)
      community.general.flatpak:
        name: com.github.IsmaelMartinez.teams_for_linux
        state: present
      become: true
      become_user: "{{ original_user }}"

    - name: Install development tools
      ansible.builtin.dnf:
        name:
          - git # Version control
          - vim # Text editor
          - neovim # Modern vim
          - tmux # Terminal multiplexer
          - nodejs # JavaScript runtime
          - npm # Node package manager
          - python3-pip # Python package manager
          - ansible # Automation tool
          - ansible-lint # Ansible linting
          - yamllint # YAML linting
          - openssh-clients # SSH tools (includes ssh-keygen)
        state: present

    - name: Install command line utilities
      ansible.builtin.dnf:
        name:
          - curl # HTTP client
          - wget # File downloader
          - jq # JSON processor
          - tree # Directory structure viewer
          - htop # Process monitor
          - ripgrep # Fast grep alternative
          - fd-find # Fast find alternative
          - bat # Cat with syntax highlighting
          - fzf # Fuzzy finder
          - zsh # Alternative shell
          - unzip # Archive extraction
        state: present

    - name: Install containerization tools
      ansible.builtin.dnf:
        name:
          - docker # Container runtime (includes compose)
        state: present

    - name: Remove Firefox
      ansible.builtin.dnf:
        name: firefox
        state: absent

    - name: Update all packages
      ansible.builtin.dnf:
        name: "*"
        state: present
        update_only: true

    - name: Check if dotfiles directory exists
      ansible.builtin.stat:
        path: "/home/{{ original_user }}/dotfiles"
      register: dotfiles_dir
      become: true
      become_user: "{{ original_user }}"

    - name: Clone repo from GitHub to user home (as regular user)
      ansible.builtin.git:
        repo: https://github.com/pbjorklund/dotfiles.git
        dest: "/home/{{ original_user }}/dotfiles"
        version: master
        update: false
      become: true
      become_user: "{{ original_user }}"
      when: not dotfiles_dir.stat.exists

    - name: Update dotfiles repo if it already exists
      ansible.builtin.git:
        repo: https://github.com/pbjorklund/dotfiles.git
        dest: "/home/{{ original_user }}/dotfiles"
        version: main
        update: true
      become: true
      become_user: "{{ original_user }}"
      when: dotfiles_dir.stat.exists
      changed_when: false

    - name: Run dotfiles install script to create symlinks
      ansible.builtin.command:
        cmd: ./install.sh
        chdir: "/home/{{ original_user }}/dotfiles"
      become: true
      become_user: "{{ original_user }}"
      register: install_result
      changed_when: "'Creating symlink' in install_result.stdout"

    - name: Start and enable Docker service
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: true

    - name: Add user to docker group
      ansible.builtin.user:
        name: "{{ original_user }}"
        groups: docker
        append: true

    - name: Enable focus-on-hover in GNOME
      community.general.dconf:
        key: "/org/gnome/desktop/wm/preferences/focus-mode"
        value: "'sloppy'"
      become: true
      become_user: "{{ original_user }}"
